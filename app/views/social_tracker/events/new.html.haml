- page_title 'Log Events'
= javascript_include_tag "new_social_tracker_event"
.container
  .row
    .col.py-3
      %h1.text-info.text-center Log Events
      %p.text-center.p-2{style: "border: 1px solid black;"}
        %strong
          Log your social events below to track your activities
          and qualify for automatic entry into sweepstakes.
      = form_with model: @social_event_log, url: social_tracker_log_path(@social_event_log), local: true, class: "pt-3" do |f|
        .row
          .col-lg-6
            .form-group
              %label(for="social_event_log_event_date") Event Date
              = f.text_field :event_date, class: "flatpickr-date form-control #{form_error_class(@social_event_log, :event_date)}"
              = model_error_display(@social_event_log, :event_date)
            .form-group
              %label(for="social_event_log_state") Event State
              = f.select :state, US_STATES, {}, { class: "form-control custom-select #{form_error_class(@social_event_log, :state)}" }
              = model_error_display(@social_event_log, :state)
            .form-group
              %label(for="social_event_log_city")
                Event City (If the city is not listed below, select the nearest metro area.)
              = f.select :city, {}, {}, { class: "form-control custom-select #{form_error_class(@social_event_log, :city)}" }
              = model_error_display(@social_event_log, :city)
            .form-group
              %label(for="social_event_log_event_type") Event Type
              =f.select :event_type, EVENT_TYPES, {}, { class: "form-control custom-select #{form_error_class(@social_event_log, :event_type)}" }
              = model_error_display(@social_event_log, :event_type)
          .col-lg-6
            .form-group
              %label(for="social_event_log_source") Event Source
              = f.select :source, SocialEventLog::EVENT_SOURCES, {}, { class: "form-control custom-select #{form_error_class(@social_event_log, :source)}" }
              = model_error_display(@social_event_log, :source)
            .form-group
              %label(for="social_event_log_event_category")
                Event Category
                %span.not_sho_category(style="display: none;") (Can only add category for SHO Events)
              =f.select :event_category, EVENT_CATEGORIES, {}, { class: "form-control custom-select #{form_error_class(@social_event_log, :event_category)}" }
              = model_error_display(@social_event_log, :event_category)
            .form-group
              %label(for="social_event_log_venue") Event Location (e.g. Central Park, my house, etc.)
              = f.text_area :venue, class: "form-control #{form_error_class(@social_event_log, :venue)}"
              = model_error_display(@social_event_log, :venue)
            .form-group
              %label(for="social_event_log_rating") Event Rating
              = f.select :rating, RATINGS, {}, { class: "form-control custom-select #{form_error_class(@social_event_log, :rating)}" }
              = model_error_display(@social_event_log, :rating)
          .col-lg-12
            .my-3.text-center
              = f.submit 'Log', class: 'btn btn-primary', data: { disable_with: 'Saving...' }, style: 'border: 1px solid black;'
